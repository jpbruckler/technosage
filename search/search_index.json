{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"Using%20ShouldProcess%20in%20PowerShell%20Functions/","title":"Using <code>ShouldProcess</code> in PowerShell Functions","text":"<p><code>ShouldProcess</code> is used in PowerShell advanced functions to enable the function to prompt for confirmation and honor the value of <code>$ConfirmPreference</code>.</p> <p>[[PowerShell Advanced Functions|PowerShell Advanced Functions]] are created by adding the <code>[CmdletBinding()]</code> declaration at the top of the function body. The <code>[CmdletBinding()]</code> attribute accepts several optional arguments to control the behavior of a function. The arguments related to supporting <code>-Confirm</code> are:</p> <ul> <li><code>SupportsShouldProcess</code><ul> <li>This argument accepts a Boolean argument. Specifying <code>SupportsShouldProcess = $true</code> enables the function to support <code>$ConfirmPreference</code> and <code>-Confirm</code>. This argument supports a shorthand declaration, meaning if the argument is provided, but no value is set, it is treated like it was set to <code>$true</code>.</li> </ul> </li> <li><code>ConfirmImpact</code><ul> <li>This argument specifies when the function action should be conformed by a call to the <code>ShouldProcess</code> method. A confirmation prompt is only displayed when the <code>ConfirmImpact</code> value is equal to or greater than the value of the <code>$ConfirmPreference</code> preference variable (<code>$ConfirmPreference</code> defaults to a value of Medium)</li> </ul> </li> </ul> <p>[!cite] Related Microsoft Documentation - Everything you wanted to know about ShouldProcess - PowerShell | Microsoft Learn - about Functions CmdletBindingAttribute - PowerShell | Microsoft Learn - Requesting Confirmation - PowerShell | Microsoft Learn - Requesting Confirmation from Cmdlets - PowerShell | Microsoft Learn - Confirmation Messages - PowerShell | Microsoft Learn - Cmdlet.ShouldProcess Method (System.Management.Automation) | Microsoft Learn</p>","tags":["status/processing","dev/powershell"]},{"location":"Using%20ShouldProcess%20in%20PowerShell%20Functions/#building-a-function-with-supportshouldprocess","title":"Building a Function with <code>SupportShouldProcess</code>","text":"<p>The best way to learn is by doing, so let's build a function that we can use to explore how <code>SupportShouldProcess</code> works. The code below scaffolds out a basic PowerShell Advanced Function that will support should process, and will prompt for confirmation if <code>$ConfirmPrefence</code> is set to Medium (the default) or High.</p> <pre><code>function Test-Confirm {\n    [CmdletBinding(SupportsShouldProcess, ConfirmImpact = 'High')]\n    param(\n        [switch] $Force\n    )\n\n    begin {\n        Write-Host (\"=\" * 50)\n        Write-Host \"Begin block ConfirmPreference: $ConfirmPreference\"\n        Write-Host (\"=\" * 50)\n    }\n\n    process {\n        Write-Host (\"=\" * 50)\n        Write-Host \"Pre-ShouldProcess\"\n        Write-Host \"ConfirmPreference: $ConfirmPreference\"\n        Write-Host (\"=\" * 50)\n\n        if ($PSCmdlet.ShouldProcess('Should continue?')) {\n            Write-Host (\"=\" * 50)\n            Write-Host \"Inside ShouldProcess\"\n            Write-Host \"ConfirmPrference: $ConfirmPreference\"\n            Write-Host (\"=\" * 50)\n        }\n    }\n\n    end {\n        Write-Host (\"=\" * 50)\n        Write-Host \"End block ConfirmPreference: $ConfirmPreference\"\n        Write-Host (\"=\" * 50)\n    }\n}\n</code></pre> <p>Running this scaffold in PowerShell results in the following output:</p> <pre><code>==================================================\nBegin block ConfirmPreference: High\n==================================================\n==================================================\nPre-ShouldProcess\nConfirmPreference: High\n==================================================\n\nConfirm\nAre you sure you want to perform this action?\nPerforming the operation \"Test-Confirm\" on target \"Should continue?\".\n[Y] Yes  [A] Yes to All  [N] No  [L] No to All  [S] Suspend  [?] Help (default is \"Y\"): y\n==================================================\nInside ShouldProcess\nConfirmPrference: High\n==================================================\n==================================================\nEnd block ConfirmPreference: High\n==================================================\n</code></pre> <p>A couple of things to note:</p> <ol> <li>The code outside of the <code>ShouldProcess</code> block is executed prior to being prompted for confirmation, including any code in the <code>begin {}</code> block.</li> <li>The call to <code>$PSCmdlet.ShouldProcess('Should continue?')</code> populates the prompt with information. Providing a single string here will populate the \"target\" section of the confirmation prompt.</li> <li>Currently:<ol> <li>calling <code>Test-Confirm -Force</code> has no impact on execution, you will still be prompted</li> <li>adding SupportsShouldProcess also enables support for <code>-WhatIf</code></li> <li>calling <code>Test-Confirm -Confirm</code> also has no impact on execution, because the ConfirmImpact is set to High</li> <li>calling <code>Test-Confirm -Confirm:$false</code> does circumvent the prompt</li> <li>adding support for ShouldProcess also enables the <code>-WhatIf</code> flag</li> </ol> </li> </ol> <pre><code># Test-Confirm\n==================================================\nBegin block ConfirmPreference: High\n==================================================\n==================================================\nPre-ShouldProcess\nConfirmPreference: High\n==================================================\n\nConfirm\nAre you sure you want to perform this action?\nPerforming the operation \"Test-Confirm\" on target \"Should continue?\".\n[Y] Yes  [A] Yes to All  [N] No  [L] No to All  [S] Suspend  [?] Help (default is \"Y\"): y\n==================================================\nInside ShouldProcess\nConfirmPrference: High\n==================================================\n==================================================\nEnd block ConfirmPreference: High\n==================================================\n</code></pre> <pre><code># Test-Confirm -Whatif\nTest-Confirm -Whatif\n==================================================\nBegin block ConfirmPreference: High\n==================================================\n==================================================\nPre-ShouldProcess\nConfirmPreference: High\n==================================================\nWhat if: Performing the operation \"Test-Confirm\" on target \"Should continue?\".\n==================================================\nEnd block ConfirmPreference: High\n==================================================\n</code></pre> <pre><code># Test-Confirm -Confirm:$false\n==================================================\nBegin block ConfirmPreference: None\n==================================================\n==================================================\nPre-ShouldProcess\nConfirmPreference: None\n==================================================\n==================================================\nInside ShouldProcess\nConfirmPrference: None\n==================================================\n==================================================\nEnd block ConfirmPreference: None\n==================================================\n</code></pre> <pre><code># Test-Confirm -Force\n==================================================\nBegin block ConfirmPreference: High\n==================================================\n==================================================\nPre-ShouldProcess\nConfirmPreference: High\n==================================================\n\nConfirm\nAre you sure you want to perform this action?\nPerforming the operation \"Test-Confirm\" on target \"Should continue?\".\n[Y] Yes  [A] Yes to All  [N] No  [L] No to All  [S] Suspend  [?] Help (default is \"Y\"): y\n==================================================\nInside ShouldProcess\nConfirmPrference: High\n==================================================\n==================================================\nEnd block ConfirmPreference: High\n==================================================\n</code></pre>","tags":["status/processing","dev/powershell"]},{"location":"Using%20ShouldProcess%20in%20PowerShell%20Functions/#supporting-force","title":"Supporting <code>-Force</code>","text":"<p>Technically the way to get around a function prompting for confirmation is to specify <code>-Confirm:$false</code>, but that is a nuance that many people forget. Additionally, many people are used to using the <code>-Force</code> switch to suppress confirmation. Not providing the <code>-Force</code> switch can lead to some confusion for users trying to use your function.</p> <pre><code>function Test-Confirm {\n    [CmdletBinding(SupportsShouldProcess, ConfirmImpact = 'High')]\n    param(\n        [switch] $Force\n    )\n\n    begin {\n        Write-Host (\"=\" * 50)\n        Write-Host \"Begin block ConfirmPreference: $ConfirmPreference\"\n        Write-Host (\"=\" * 50)\n    }\n\n    process {\n        if ($Force -and -Not $Confirm) {\n            Write-Host 'Force or -Confirm:$False supplied.'\n            $ConfirmPreference = 'None'\n        }\n\n        Write-Host (\"=\" * 50)\n        Write-Host \"Pre-ShouldProcess\"\n        Write-Host \"ConfirmPreference: $ConfirmPreference\"\n        Write-Host (\"=\" * 50)\n\n        if ($PSCmdlet.ShouldProcess('Should continue?')) {\n            Write-Host (\"=\" * 50)\n            Write-Host \"Inside ShouldProcess\"\n            Write-Host \"ConfirmPrference: $ConfirmPreference\"\n            Write-Host (\"=\" * 50)\n        }\n    }\n\n    end {\n        Write-Host (\"=\" * 50)\n        Write-Host \"End block ConfirmPreference: $ConfirmPreference\"\n        Write-Host (\"=\" * 50)\n    }\n}\n</code></pre> <ul> <li>Calling without any parameters still prompts for confirmation</li> </ul> <pre><code># Test-Confirm\n==================================================\nBegin block ConfirmPreference: High\n==================================================\n==================================================\nPre-ShouldProcess\nConfirmPreference: High\n==================================================\n\nConfirm\nAre you sure you want to perform this action?\nPerforming the operation \"Test-Confirm\" on target \"Should continue?\".\n[Y] Yes  [A] Yes to All  [N] No  [L] No to All  [S] Suspend  [?] Help (default is \"Y\"):\n</code></pre> <ul> <li><code>-Force</code> skips the confirmation prompt</li> </ul> <pre><code># Test-Confirm -Force\n==================================================\nBegin block ConfirmPreference: High\n==================================================\nForce or -Confirm:$False supplied.\n==================================================\nPre-ShouldProcess\nConfirmPreference: None\n==================================================\n==================================================\nInside ShouldProcess\nConfirmPrference: None\n==================================================\n==================================================\nEnd block ConfirmPreference: None\n==================================================\n</code></pre> <ul> <li><code>-WhatIf</code> still works as expected</li> </ul> <pre><code># Test-Confirm -Whatif\n==================================================\nBegin block ConfirmPreference: High\n==================================================\n==================================================\nPre-ShouldProcess\nConfirmPreference: High\n==================================================\nWhat if: Performing the operation \"Test-Confirm\" on target \"Should continue?\".\n==================================================\nEnd block ConfirmPreference: High\n==================================================\n</code></pre> <ul> <li><code>-Confirm:$false</code> still works as expected, skipping confirmation prompt</li> </ul> <pre><code># Test-Confirm -Confirm:$false\n==================================================\nBegin block ConfirmPreference: None\n==================================================\n==================================================\nPre-ShouldProcess\nConfirmPreference: None\n==================================================\n==================================================\nInside ShouldProcess\nConfirmPrference: None\n==================================================\n==================================================\nEnd block ConfirmPreference: None\n==================================================\n</code></pre> <ul> <li><code>-WhatIf</code> still takes precedence</li> </ul> <pre><code># Test-Confirm -Whatif -Force\n==================================================\nBegin block ConfirmPreference: High\n==================================================\nForce or -Confirm:$False supplied.\n==================================================\nPre-ShouldProcess\nConfirmPreference: None\n==================================================\nWhat if: Performing the operation \"Test-Confirm\" on target \"Should continue?\".\n==================================================\nEnd block ConfirmPreference: None\n==================================================\n</code></pre>","tags":["status/processing","dev/powershell"]}]}